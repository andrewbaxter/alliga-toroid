package com.zarbosoft.alligatoroid.compiler;

import com.zarbosoft.alligatoroid.compiler.jvmshared.JavaBytecode;
import com.zarbosoft.alligatoroid.compiler.jvmshared.JavaBytecodeUtils;
import com.zarbosoft.alligatoroid.compiler.jvmshared.JavaDataDescriptor;
import com.zarbosoft.alligatoroid.compiler.jvmshared.JavaInternalName;
import org.objectweb.asm.Opcodes;

import static org.objectweb.asm.Opcodes.AALOAD;
import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.DRETURN;
import static org.objectweb.asm.Opcodes.FRETURN;
import static org.objectweb.asm.Opcodes.IALOAD;
import static org.objectweb.asm.Opcodes.IASTORE;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.RETURN;

public class Global {
  public static final JavaDataDescriptor DESC_BOOL;
  public static final JavaDataDescriptor DESC_LONG;
  public static final JavaDataDescriptor DESC_INT;
  public static final JavaDataDescriptor DESC_FLOAT;
  public static final JavaDataDescriptor DESC_DOUBLE;
  public static final JavaDataDescriptor DESC_BYTE;
  public static final JavaDataDescriptor DESC_BYTE_ARRAY;
  public static final JavaDataDescriptor DESC_CHAR;
  public static final JavaDataDescriptor DESC_SHORT;
  public static final JavaDataDescriptor DESC_VOID;
  public static final JavaDataDescriptor DESC_OBJECT;
  public static final JavaDataDescriptor DESC_STRING;
  public static final JavaDataDescriptor DESC_BOXED_BOOL;
  public static final JavaDataDescriptor DESC_BOXED_INT;
  public static final JavaDataDescriptor DESC_BOXED_BYTE;
  public static final JavaInternalName INTNAME_BOXED_BOOL;
  public static final JavaInternalName INTNAME_BOXED_BYTE;
  public static final JavaInternalName INTNAME_BOXED_INT;
  public static final JavaInternalName INTNAME_RUNTIME_EXCEPTION;
  public static final JavaInternalName INTNAME_STRING;
  public static final JavaInternalName INTNAME_OBJECT;
  public static final JavaBytecode JBC_BOX_BOOL;
  public static final JavaBytecode JBC_BOX_BYTE;
  public static final JavaBytecode JBC_BOX_INT;
  public static final JavaBytecode JBC_ARRAY_LOAD_OBJ;
  public static final JavaBytecode JBC_ARRAY_STORE_OBJ;
  public static final JavaBytecode JBC_ARRAY_LOAD_INT;
  public static final JavaBytecode JBC_ARRAY_STORE_INT;
  public static final JavaBytecode JBC_DUP;
  public static final JavaBytecode JBC_POP;
  public static final JavaBytecode JBC_ARRAY_STORE_LONG;
  public static final JavaBytecode JBC_ARRAY_LOAD_LONG;
  public static final JavaBytecode JBC_arrayStoreShort;
  public static final JavaBytecode JBC_arrayLoadShort;
  public static final JavaBytecode JBC_arrayStoreByteBool;
  public static final JavaBytecode JBC_arrayLoadByteBool;
  public static final JavaBytecode JBC_arrayStoreChar;
  public static final JavaBytecode JBC_arrayLoadChar;
  public static final JavaBytecode JBC_arrayStoreFloat;
  public static final JavaBytecode JBC_arrayLoadFloat;
  public static final JavaBytecode JBC_arrayStoreDouble;
  public static final JavaBytecode JBC_arrayLoadDouble;
  public static final JavaBytecode JBC_literalIntM1;
  public static final JavaBytecode JBC_literalInt0;
  public static final JavaBytecode JBC_literalInt1;
  public static final JavaBytecode JBC_literalInt2;
  public static final JavaBytecode JBC_literalInt3;
  public static final JavaBytecode JBC_literalInt4;
  public static final JavaBytecode JBC_literalInt5;
  public static final JavaBytecode JBC_literalLong0;
  public static final JavaBytecode JBC_literalLong1;
  public static final JavaBytecode JBC_returnVoid;
  public static final JavaBytecode JBC_returnIntShortByteBool;
  public static final JavaBytecode JBC_returnLong;
  public static final JavaBytecode JBC_returnFloat;
  public static final JavaBytecode JBC_returnDouble;
  public static final JavaBytecode JBC_returnObj;
  public static final JavaBytecode JBC_literalNull;

  static {
    INTNAME_OBJECT = JavaBytecodeUtils.internalNameFromClass(Object.class);
    INTNAME_STRING = JavaBytecodeUtils.internalNameFromClass(String.class);
    INTNAME_BOXED_BOOL = JavaBytecodeUtils.internalNameFromClass(Boolean.class);
    INTNAME_BOXED_BYTE = JavaBytecodeUtils.internalNameFromClass(Byte.class);
    INTNAME_BOXED_INT = JavaBytecodeUtils.internalNameFromClass(Integer.class);
    INTNAME_RUNTIME_EXCEPTION = JavaBytecodeUtils.internalNameFromClass(RuntimeException.class);
    DESC_BOOL = JavaDataDescriptor.create("Z");
    DESC_LONG = JavaDataDescriptor.create("J");
    DESC_INT = JavaDataDescriptor.create("I");
    DESC_FLOAT = JavaDataDescriptor.create("F");
    DESC_DOUBLE = JavaDataDescriptor.create("D");
    DESC_BYTE = JavaDataDescriptor.create("B");
    DESC_BYTE_ARRAY = DESC_BYTE.array();
    DESC_CHAR = JavaDataDescriptor.create("C");
    DESC_SHORT = JavaDataDescriptor.create("S");
    DESC_VOID = JavaDataDescriptor.create("V");
    DESC_OBJECT = JavaDataDescriptor.fromJVMName(INTNAME_OBJECT);
    DESC_STRING = JavaDataDescriptor.fromJVMName(INTNAME_STRING);
    DESC_BOXED_BOOL = JavaDataDescriptor.fromObjectClass(Boolean.class);
    DESC_BOXED_INT = JavaDataDescriptor.fromObjectClass(Integer.class);
    DESC_BOXED_BYTE = JavaDataDescriptor.fromObjectClass(Byte.class);
    JBC_BOX_BOOL = JavaBytecodeUtils.box(DESC_BOOL, INTNAME_BOXED_BOOL);
    JBC_BOX_BYTE = JavaBytecodeUtils.box(DESC_BYTE, INTNAME_BOXED_BYTE);
    JBC_BOX_INT = JavaBytecodeUtils.box(DESC_INT, INTNAME_BOXED_INT);
    JBC_ARRAY_LOAD_OBJ = JavaBytecodeUtils.inst(AALOAD);
    JBC_ARRAY_STORE_OBJ = JavaBytecodeUtils.inst(AASTORE);
    JBC_ARRAY_LOAD_INT = JavaBytecodeUtils.inst(IALOAD);
    JBC_ARRAY_STORE_INT = JavaBytecodeUtils.inst(IASTORE);
    JBC_DUP = JavaBytecodeUtils.inst(Opcodes.DUP);
    JBC_POP = JavaBytecodeUtils.inst(Opcodes.POP);
    JBC_ARRAY_STORE_LONG = JavaBytecodeUtils.inst(Opcodes.LASTORE);
    JBC_ARRAY_LOAD_LONG = JavaBytecodeUtils.inst(Opcodes.LALOAD);
    JBC_arrayStoreShort = JavaBytecodeUtils.inst(Opcodes.SASTORE);
    JBC_arrayLoadShort = JavaBytecodeUtils.inst(Opcodes.SALOAD);
    JBC_arrayStoreByteBool = JavaBytecodeUtils.inst(Opcodes.BASTORE);
    JBC_arrayLoadByteBool = JavaBytecodeUtils.inst(Opcodes.BALOAD);
    JBC_arrayStoreChar = JavaBytecodeUtils.inst(Opcodes.CASTORE);
    JBC_arrayLoadChar = JavaBytecodeUtils.inst(Opcodes.CALOAD);
    JBC_arrayStoreFloat = JavaBytecodeUtils.inst(Opcodes.FASTORE);
    JBC_arrayLoadFloat = JavaBytecodeUtils.inst(Opcodes.FALOAD);
    JBC_arrayStoreDouble = JavaBytecodeUtils.inst(Opcodes.DASTORE);
    JBC_arrayLoadDouble = JavaBytecodeUtils.inst(Opcodes.DALOAD);
    JBC_literalIntM1 = JavaBytecodeUtils.inst(ICONST_M1);
    JBC_literalInt0 = JavaBytecodeUtils.inst(ICONST_0);
    JBC_literalInt1 = JavaBytecodeUtils.inst(ICONST_1);
    JBC_literalInt2 = JavaBytecodeUtils.inst(ICONST_2);
    JBC_literalInt3 = JavaBytecodeUtils.inst(ICONST_3);
    JBC_literalInt4 = JavaBytecodeUtils.inst(ICONST_4);
    JBC_literalInt5 = JavaBytecodeUtils.inst(ICONST_5);
    JBC_literalLong0 = JavaBytecodeUtils.inst(LCONST_0);
    JBC_literalLong1 = JavaBytecodeUtils.inst(LCONST_1);
    JBC_returnVoid = JavaBytecodeUtils.inst(RETURN);
    JBC_returnIntShortByteBool = JavaBytecodeUtils.inst(IRETURN);
    JBC_returnLong = JavaBytecodeUtils.inst(LRETURN);
    JBC_returnFloat = JavaBytecodeUtils.inst(FRETURN);
    JBC_returnDouble = JavaBytecodeUtils.inst(DRETURN);
    JBC_returnObj = JavaBytecodeUtils.inst(ARETURN);
    JBC_literalNull = JavaBytecodeUtils.inst(ACONST_NULL);
  }
}
